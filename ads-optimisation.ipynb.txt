{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2021-09-16T18:09:28.360817Z","iopub.execute_input":"2021-09-16T18:09:28.361175Z","iopub.status.idle":"2021-09-16T18:09:28.398841Z","shell.execute_reply.started":"2021-09-16T18:09:28.361094Z","shell.execute_reply":"2021-09-16T18:09:28.397928Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"dataset=pd.read_csv('/kaggle/input/adsoptimisation/Ads_CTR_Optimisation.csv')","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:09:34.473964Z","iopub.execute_input":"2021-09-16T18:09:34.474271Z","iopub.status.idle":"2021-09-16T18:09:34.503579Z","shell.execute_reply.started":"2021-09-16T18:09:34.474241Z","shell.execute_reply":"2021-09-16T18:09:34.502664Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"z=dataset","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:09:44.251607Z","iopub.execute_input":"2021-09-16T18:09:44.251923Z","iopub.status.idle":"2021-09-16T18:09:44.256608Z","shell.execute_reply.started":"2021-09-16T18:09:44.251891Z","shell.execute_reply":"2021-09-16T18:09:44.255505Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"z","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:09:49.884065Z","iopub.execute_input":"2021-09-16T18:09:49.884835Z","iopub.status.idle":"2021-09-16T18:09:49.909798Z","shell.execute_reply.started":"2021-09-16T18:09:49.884789Z","shell.execute_reply":"2021-09-16T18:09:49.909158Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#implementing random sampling algorithm #\nimport random\nN=10000\nd=10\nads_selected=[]#empty list to collect ads that are selected#\ntotal_reward=0\nfor n in range(0,N):\n    ad=random.randrange(d)\n    ads_selected.append(ad)\n    reward=dataset.values[n,ad]\n    total_reward=total_reward+reward \n    \n\n\ntotal_reward\n# displays total reward by using Random sampling algorithm#","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:09:57.65444Z","iopub.execute_input":"2021-09-16T18:09:57.655264Z","iopub.status.idle":"2021-09-16T18:09:57.758832Z","shell.execute_reply.started":"2021-09-16T18:09:57.655223Z","shell.execute_reply":"2021-09-16T18:09:57.757926Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from numpy import random\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.distplot(random.binomial(n=10,p=.5,size=1000),hist=True, kde=False)\nplt.title('histogram of ads selected ')\nplt.xlabel('ads')\nplt.ylabel('no. of times each ad is displayed(reward) ')\nplt.show() ","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:10:06.721709Z","iopub.execute_input":"2021-09-16T18:10:06.722008Z","iopub.status.idle":"2021-09-16T18:10:07.864751Z","shell.execute_reply.started":"2021-09-16T18:10:06.72198Z","shell.execute_reply":"2021-09-16T18:10:07.86372Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.hist(ads_selected)\nplt.title('histogram of ads selected ')\nplt.xlabel('ads')\nplt.ylabel('no of times each ad was selected ')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:10:18.25821Z","iopub.execute_input":"2021-09-16T18:10:18.258505Z","iopub.status.idle":"2021-09-16T18:10:18.524075Z","shell.execute_reply.started":"2021-09-16T18:10:18.258476Z","shell.execute_reply":"2021-09-16T18:10:18.523129Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pd.Series(ads_selected).tail(1000).value_counts(normalize=True)","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:10:25.332238Z","iopub.execute_input":"2021-09-16T18:10:25.33251Z","iopub.status.idle":"2021-09-16T18:10:25.351037Z","shell.execute_reply.started":"2021-09-16T18:10:25.332484Z","shell.execute_reply":"2021-09-16T18:10:25.350047Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"#implementing ucb#\nimport math\nN=10000\nd=10\nads_selected=[]\nnumber_of_selection=[0]*d\nsum_of_reward=[0]*d\ntotal_reward=0\nfor n in range(0,N):\n    ad=0\n    max_upper_bound=0\n    for i in range(0,d):\n        if (number_of_selection[i]>0):\n            average=sum_of_reward[i]/number_of_selection[i]\n            delta=math.sqrt(2*math.log(n+1)/number_of_selection[i])\n            upper_bound=average+delta\n        else:\n            upper_bound=1e400\n        if upper_bound>max_upper_bound:\n                max_upper_bound=upper_bound\n                ad=i\n                ads_selected.append(ad)\n                number_of_selection[ad]+=1\n                reward=dataset.values[n,ad]\n                sum_of_reward[ad]+=reward\n                total_reward=total_reward+reward \n\n            \n            \n                            \n            \n        \n\n\n\n\n","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:10:34.302766Z","iopub.execute_input":"2021-09-16T18:10:34.303037Z","iopub.status.idle":"2021-09-16T18:10:34.767535Z","shell.execute_reply.started":"2021-09-16T18:10:34.303011Z","shell.execute_reply":"2021-09-16T18:10:34.766862Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"upper_bound ","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:10:42.12263Z","iopub.execute_input":"2021-09-16T18:10:42.123053Z","iopub.status.idle":"2021-09-16T18:10:42.128507Z","shell.execute_reply.started":"2021-09-16T18:10:42.123024Z","shell.execute_reply":"2021-09-16T18:10:42.1275Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"total_reward #This determines total rewards (Ad-clicks)obtained from UCB algorithm #","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:11:45.937666Z","iopub.execute_input":"2021-09-16T18:11:45.937959Z","iopub.status.idle":"2021-09-16T18:11:45.944661Z","shell.execute_reply.started":"2021-09-16T18:11:45.937932Z","shell.execute_reply":"2021-09-16T18:11:45.943666Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"pd.Series(ads_selected).head(1500).value_counts(normalize=True)","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:11:53.236647Z","iopub.execute_input":"2021-09-16T18:11:53.23694Z","iopub.status.idle":"2021-09-16T18:11:53.258258Z","shell.execute_reply.started":"2021-09-16T18:11:53.236913Z","shell.execute_reply":"2021-09-16T18:11:53.257686Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"ad","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:13:30.984711Z","iopub.execute_input":"2021-09-16T18:13:30.985035Z","iopub.status.idle":"2021-09-16T18:13:30.991543Z","shell.execute_reply.started":"2021-09-16T18:13:30.985004Z","shell.execute_reply":"2021-09-16T18:13:30.990751Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nplt.hist(ads_selected)\nplt.title('histogram of ads selected ')\nplt.xlabel('ads')\nplt.ylabel('no of times each ad was selected ')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:13:50.284682Z","iopub.execute_input":"2021-09-16T18:13:50.284982Z","iopub.status.idle":"2021-09-16T18:13:50.656175Z","shell.execute_reply.started":"2021-09-16T18:13:50.28495Z","shell.execute_reply":"2021-09-16T18:13:50.655536Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from numpy import random \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.distplot(random.binomial(n=10,p=.5,size=1000),hist=True,kde=False)","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:13:58.74207Z","iopub.execute_input":"2021-09-16T18:13:58.742877Z","iopub.status.idle":"2021-09-16T18:13:58.998761Z","shell.execute_reply.started":"2021-09-16T18:13:58.74283Z","shell.execute_reply":"2021-09-16T18:13:58.997956Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#implementation Thomson samplings#\nimport random\nN=10000\nd=10\nads_selected=[]\nnumbers_rewards_1=[0]*d\nnumbers_rewards_0=[0]*d\ntotal_rewards=0\nfor n in range(0,N):\n    ad=0\n    max_random=0\n    for i in range(0,d):\n        random_beta=random.betavariate(numbers_rewards_1[i]+1,numbers_rewards_0[i]+1)\n        if random_beta>max_random:\n            max_random=random_beta\n            ad=i\n    ads_selected.append(ad)\n    reward=dataset.values[n,ad]\n    if reward==1:\n        numbers_rewards_1[ad]=numbers_rewards_1[ad]+1\n    else:\n        numbers_rewards_0[ad]=numbers_rewards_0[ad]+1\n    total_reward=total_reward+reward\n            \n    \n    ","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:09.610676Z","iopub.execute_input":"2021-09-16T18:14:09.610982Z","iopub.status.idle":"2021-09-16T18:14:10.303635Z","shell.execute_reply.started":"2021-09-16T18:14:09.610953Z","shell.execute_reply":"2021-09-16T18:14:10.302815Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"total_reward","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:16.115138Z","iopub.execute_input":"2021-09-16T18:14:16.115431Z","iopub.status.idle":"2021-09-16T18:14:16.121418Z","shell.execute_reply.started":"2021-09-16T18:14:16.115402Z","shell.execute_reply":"2021-09-16T18:14:16.120466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"ad","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:23.57727Z","iopub.execute_input":"2021-09-16T18:14:23.577804Z","iopub.status.idle":"2021-09-16T18:14:23.583255Z","shell.execute_reply.started":"2021-09-16T18:14:23.577762Z","shell.execute_reply":"2021-09-16T18:14:23.582617Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"numbers_rewards_1","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:41.784978Z","iopub.execute_input":"2021-09-16T18:14:41.786469Z","iopub.status.idle":"2021-09-16T18:14:41.794543Z","shell.execute_reply.started":"2021-09-16T18:14:41.786419Z","shell.execute_reply":"2021-09-16T18:14:41.793474Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"numbers_rewards_0","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:48.582863Z","iopub.execute_input":"2021-09-16T18:14:48.583464Z","iopub.status.idle":"2021-09-16T18:14:48.589526Z","shell.execute_reply.started":"2021-09-16T18:14:48.583427Z","shell.execute_reply":"2021-09-16T18:14:48.588694Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"random_beta","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:53.828625Z","iopub.execute_input":"2021-09-16T18:14:53.828929Z","iopub.status.idle":"2021-09-16T18:14:53.834786Z","shell.execute_reply.started":"2021-09-16T18:14:53.828894Z","shell.execute_reply":"2021-09-16T18:14:53.834045Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"max_random","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:59.947533Z","iopub.execute_input":"2021-09-16T18:14:59.948215Z","iopub.status.idle":"2021-09-16T18:14:59.954162Z","shell.execute_reply.started":"2021-09-16T18:14:59.948175Z","shell.execute_reply":"2021-09-16T18:14:59.953222Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"reward","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:15:03.616154Z","iopub.execute_input":"2021-09-16T18:15:03.616593Z","iopub.status.idle":"2021-09-16T18:15:03.622943Z","shell.execute_reply.started":"2021-09-16T18:15:03.616541Z","shell.execute_reply":"2021-09-16T18:15:03.622149Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.hist(ads_selected)\nplt.title('histogram of ads selection ')\nplt.xlabel('ads')\nplt.ylabel ('no of times each ad was selected ')\nplt.show","metadata":{"execution":{"iopub.status.busy":"2021-09-16T18:14:32.396284Z","iopub.execute_input":"2021-09-16T18:14:32.397528Z","iopub.status.idle":"2021-09-16T18:14:32.691224Z","shell.execute_reply.started":"2021-09-16T18:14:32.397482Z","shell.execute_reply":"2021-09-16T18:14:32.690635Z"},"trusted":true},"execution_count":null,"outputs":[]}]}